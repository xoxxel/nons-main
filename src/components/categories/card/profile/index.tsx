"use client";
import { Box } from "@mui/material";
import Image from "next/image";

const Profile = ({
  verified,
  width,
  height,
  image,
}: {
  verified?: boolean;
  width?: string;
  height?: string;
  image?: string;
}) => {

  return (
    <Box
      sx={{
        width: width || "47px",
        height: height || "47px",
        border: "2px solid",
        borderColor: "white",
        borderRadius: "65px",
        boxShadow: "inset 0px 4px 4px rgba(0, 0, 0, 0.15)",
        position: "relative",
      }}
    >
      <Image
        alt="avatar"
        src={
          image
            ? `${process.env.NEXT_PUBLIC_SERVER}/${image}`
            : "/images/boredape.png"
        }
        fill
        objectFit="contain"
        loading="lazy"
        style={{ borderRadius: "65px" }}
      />
      {verified && (
        <Box
          sx={{
            display: "flex",
            position: "absolute",
            bottom: "-4px",
            left: "-4px",
          }}
        >
          <svg
            width="19"
            height="19"
            viewBox="0 0 19 19"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M14.331 3.97833C14.5012 4.38367 14.8277 4.70586 15.2388 4.87408L16.6805 5.46245C17.092 5.63036 17.4189 5.95243 17.5893 6.3578C17.7597 6.76318 17.7597 7.21865 17.5893 7.62403L16.9925 9.04346C16.822 9.44902 16.8218 9.90495 16.9931 10.3103L17.5888 11.7293C17.6733 11.9301 17.7168 12.1453 17.7168 12.3627C17.7168 12.58 17.6734 12.7952 17.589 12.996C17.5046 13.1968 17.3808 13.3793 17.2248 13.533C17.0688 13.6866 16.8836 13.8085 16.6797 13.8916L15.2391 14.4795C14.8277 14.6471 14.5007 14.9689 14.3299 15.3739L13.7328 16.7944C13.5623 17.1998 13.2354 17.5218 12.824 17.6898C12.4126 17.8577 11.9503 17.8577 11.5389 17.6898L10.0982 17.1018C9.68674 16.9343 9.22462 16.9347 8.81342 17.1028L7.37172 17.6903C6.96051 17.8578 6.49863 17.8577 6.08753 17.6899C5.67642 17.5221 5.34972 17.2004 5.17918 16.7955L4.58183 15.3746C4.41172 14.9693 4.0852 14.6471 3.67405 14.4789L2.23235 13.8905C1.82109 13.7227 1.4943 13.4008 1.32382 12.9956C1.15333 12.5905 1.1531 12.1352 1.32318 11.7299L1.91992 10.3105C2.08992 9.90511 2.08958 9.4498 1.91895 9.04467L1.32307 7.62319C1.23858 7.42242 1.19508 7.2072 1.19504 6.98986C1.19501 6.77251 1.23844 6.55728 1.32286 6.35648C1.40728 6.15568 1.53103 5.97323 1.68704 5.81957C1.84306 5.6659 2.02827 5.54403 2.2321 5.46092L3.67277 4.87297C4.08382 4.70552 4.41064 4.38421 4.58149 3.97959L5.17866 2.55913C5.34908 2.15376 5.67597 1.83169 6.08741 1.66378C6.49884 1.49587 6.96113 1.49587 7.37257 1.66378L8.81323 2.25173C9.22468 2.41923 9.6868 2.41888 10.098 2.25078L11.5403 1.66469C11.9517 1.49687 12.4139 1.49691 12.8252 1.66478C13.2366 1.83266 13.5634 2.15464 13.7339 2.55991L14.3312 3.98079L14.331 3.97833Z"
              fill="#0788F5"
            />
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M12.9629 7.36356C13.0825 7.17839 13.1226 6.95398 13.0743 6.7397C13.0261 6.52541 12.8934 6.3388 12.7054 6.22092C12.5175 6.10303 12.2897 6.06353 12.0722 6.11111C11.8547 6.15868 11.6653 6.28943 11.5457 6.47459L8.25793 11.5646L6.75342 9.7117C6.61433 9.54029 6.41182 9.43033 6.19044 9.40603C5.96907 9.38173 5.74696 9.44506 5.57298 9.58211C5.399 9.71915 5.2874 9.91868 5.26274 10.1368C5.23807 10.3549 5.30235 10.5737 5.44145 10.7452L7.68031 13.5025C7.76374 13.6054 7.87091 13.6871 7.99289 13.741C8.11487 13.7949 8.24814 13.8192 8.38161 13.8121C8.51509 13.805 8.64491 13.7666 8.76027 13.7001C8.87564 13.6336 8.97322 13.5409 9.04489 13.4297L12.9629 7.36356Z"
              fill="white"
            />
          </svg>
        </Box>
      )}
    </Box>
  );
};

export default Profile;
